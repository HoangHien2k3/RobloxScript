local csgt, sf, cleartext_x, cleartext_z, fr, tb_1, tb_2, status_1, fix_attemp, h_oid, alr_dc, check_delay, TextChatService, ReplicatedStorage
local plrs, alr_c, ck, master_x, master_call, stg, rs, storage_target, c_master, c_code, d_tble, last_message, found_master, IsLegacyChat_Service

csgt = Instance.new("ScreenGui")
fr = Instance.new("Frame")
tb_1 = Instance.new("TextBox")
tb_2 = Instance.new("TextBox")
status_1 = Instance.new("TextLabel")

plrs = game:GetService("Players")
stg = game:GetService("StarterGui")
rs = game:GetService("RunService")
TextChatService = game:GetService("TextChatService")
ReplicatedStorage = game:GetService("ReplicatedStorage")

IsLegacyChat_Service = TextChatService.ChatVersion == Enum.ChatVersion.LegacyChatService

csgt.Name = "PX"
sf = Enum.Font.Code
cleartext_z = false
cleartext_x = true
alr_c = false
alr_dc = false
ck = false
fix_attemp = false
check_delay = false
storage_target = nil
last_message = nil
c_master = nil
c_code = nil
h_oid = nil

d_tble = {"/Disconnect", "/disconnect", "/dis", "/remove", "/leave"}

csgt.Parent = game.CoreGui
fr.Parent = csgt
tb_1.Parent = fr
tb_2.Parent = fr
status_1.Parent = fr

fr.BackgroundColor3 = Color3.new(0, 0, 0)
fr.BackgroundTransparency = 0.5
fr.Position = UDim2.new(1.2, 0, 0.4, 0)
fr.Size = UDim2.new(0.2, 0, 0.2, 0)
fr.Active = true
fr.Draggable = true
fr.Visible = true

tb_1.BackgroundColor3 = Color3.new(0, 0, 0)
tb_1.BackgroundTransparency = 0.5
tb_1.Position = UDim2.new(0.1, 0, 0.1, 0)
tb_1.Size = UDim2.new(0.8, 0, 0.3, 0)
tb_1.TextScaled = true
tb_1.TextColor3 = Color3.new(1, 1, 1)
tb_1.Font = sf
tb_1.Text = ""
tb_1.PlaceholderText = "input username"
tb_1.ClearTextOnFocus = cleartext_x
tb_1.Visible = true

tb_2.BackgroundColor3 = Color3.new(0, 0, 0)
tb_2.BackgroundTransparency = 0.5
tb_2.Position = UDim2.new(0.25, 0, 0.45, 0)
tb_2.Size = UDim2.new(0.4, 0, 0.25, 0)
tb_2.TextScaled = true
tb_2.TextColor3 = Color3.new(0, 1, 0)
tb_2.Font = sf
tb_2.Text = ""
tb_2.PlaceholderText = "connection code"
tb_2.ClearTextOnFocus = cleartext_z
tb_2.Visible = true

status_1.BackgroundColor3 = Color3.new(0, 0, 0)
status_1.BackgroundTransparency = 0.5
status_1.Position = UDim2.new(0.1, 0, 0.45, 0)
status_1.Size = UDim2.new(0.1, 0, 0.1, 0)
status_1.TextScaled = true
status_1.TextColor3 = Color3.new(1, 1, 1)
status_1.Font = sf
status_1.Text = " "
status_1.Visible = true

function uic(pr, radius)
    local edge = Instance.new("UICorner")
    edge.Parent = pr
    edge.CornerRadius = radius
end

function ntf(msg)
    stg:SetCore("SendNotification", {
        Title = "《Alert》",
        Text = msg,
        Duration = 1.5,
    })
end

function c_chat(str_chat)
    str_chat = tostring(str_chat)
    if not IsLegacyChat_Service then
        TextChatService.TextChannels.RBXGeneral:SendAsync(str_chat)
    else
        ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(str_chat, "All")
    end
end

function check()
    if not ck then
        ck = true
        status_1.BackgroundColor3 = Color3.new(0, 1, 0)
        wait(0.1)
        status_1.BackgroundColor3 = Color3.new(0, 0, 0)
        wait(0.05)
        ck = false
    end
end

function GetTarget(e_name)
    for _, enemie in pairs(game.Workspace.Monster.Boss:GetChildren()) do
        if enemie.Name == e_name and enemie:IsA("Model") and enemie:FindFirstChild("HumanoidRootPart") then
            return enemie
        end
    end
    return nil
end

function Teleport_to_e(e_name)
    local nearby_enemies = nil
    local nearest_dis = math.huge
    local maxiumDis = 1000
    
    for _, enemy in pairs(game.Workspace.Monster.Boss:GetChildren()) do
        if enemy.Name == e_name and enemy:IsA("Model") and enemy:FindFirstChild("HumanoidRootPart") then
            local distance = (plrs.LocalPlayer.Character.HumanoidRootPart.Position - enemy.HumanoidRootPart.Position).magnitude
            
            if distance < nearest_dis and distance <= maxiumDis then
                nearest_dis = distance
                nearby_enemies = enemy
            end
        end
    end
    
    if nearby_enemies then
        local h_oid = nearby_enemies:FindFirstChild("Humanoid")
        local cur_enemy_p = nearby_enemies.HumanoidRootPart.Position
        local dir_behind = (plrs.LocalPlayer.Character.HumanoidRootPart.Position - cur_enemy_p).unit
        local behind_dis = cur_enemy_p + dir_behind * -10
        
        if h_oid and h_oid.Health > 0 then
            plrs.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(behind_dis)
        elseif h_oid and h_oid.Health <= 0 then
            nearby_enemies.HumanoidRootPart.CFrame = CFrame.new(nearby_enemies.HumanoidRootPart.Position.X, 1000, nearby_enemies.HumanoidRootPart.Position.Z)
            storage_target = nil
        end
    else
        print("no enemies found with the name: '" .. e_name .. "'")
    end
end

local master_x2 = tb_1.Text
local master_p2 = plrs and plrs:FindFirstChild(master_x2)

function NearestHRP(position)
    local N_HRP = nil
    local NDistance = math.huge
    local PCharacter = master_p2 and master_p2.Character
    
    local function SearchFolder(folder)
        for _, object in ipairs(folder:GetChildren()) do
            if object:IsA("Model") and object:FindFirstChild("HumanoidRootPart") and object ~= PCharacter then
                local hrp_0 = object:FindFirstChild("HumanoidRootPart")
                
                if hrp_0 then
                    local distance = (hrp_0.Position - position).magnitude
                    
                    if distance < NDistance then
                        NDistance = distance
                        N_HRP = hrp_0
                    end
                end
            end
            
            if object:IsA("Folder") then
                SearchFolder(object)
            end
        end
    end
    
    SearchFolder(game.Workspace.Monster)
    
    return N_HRP
end

function check_fm()
    if found_master then
        found_master = nil
        ntf("Removing previous master.")
    else
        ntf("New master.")
    end
end

function Commands_m(str)
    local ark = string.split(str, " ")

    if c_master and c_master.Character and c_master.Character:FindFirstChild("Humanoid") then
        local humanoid = c_master.Character.Humanoid
        if humanoid.Health <= 0 then
            ntf("Cannot execute command, " .. c_master.Name .. " is dead or respawning!")
            return
        end
    end
    
    if ark[1] == "/reset" then
        plrs.LocalPlayer.Character.Humanoid.Health = 0
        ntf("Character Reset !")
        c_chat("Successfully Resetting Character !")
    elseif ark[1] == "/showui" then
        fr.Position = UDim2.new(0.6, 0, 0.4, 0)
        ntf("Controller UI Shown")
    elseif ark[1] == "/hideui" then
        fr.Position = UDim2.new(1.2, 0, 0.4, 0)
        ntf("Controller UI Hided")
    elseif ark[1] == "/kick" and ark[2] then
        local kick_message = table.concat(ark, " ", 2)
        last_message = kick_message
        plrs.LocalPlayer:Kick(kick_message)
    elseif ark[1] == "/bring" then
        local master_x1 = tb_1.Text
        local master_p = plrs and plrs:FindFirstChild(master_x1)
        if master_p and master_p.Character and master_p.Character:FindFirstChild("HumanoidRootPart") then
            local master_p1 = master_p.Character.HumanoidRootPart.Position + Vector3.new(0, 2, 0)
            c_chat("/teleport " .. master_x1)
            plrs.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(master_p1)
        end
    elseif ark[1] == "/kill" then
        if #ark >= 3 and ark[2] == "npc" then
            local target = table.concat(ark, " ", 3)
            storage_target = target
            
            rs.RenderStepped:Connect(function(deltaTime)
                if storage_target then
                    Teleport_to_e(storage_target)
                end
            end)
        elseif ark[2] == "nearest" then
            local master_x1 = tb_1.Text
            local master_p = plrs and plrs:FindFirstChild(master_x1)
            fix_attemp = false
            
            if master_p and master_p.Character then
                local position = master_p.Character.HumanoidRootPart.Position
                local nearestHRP = NearestHRP(position)
                
                rs.RenderStepped:Connect(function(deltaTime)
                    if nearestHRP and not fix_attemp then
                        cur_enemy_p = nearestHRP.Position
                        h_oid = nil
                        task.wait()
                        h_oid = nearestHRP.Parent:FindFirstChild("Humanoid")
                        
                        if h_oid and h_oid.Health <= 0 then
                            nearestHRP.Parent.HumanoidRootPart.CFrame = CFrame.new(nearestHRP.Position.X, 1000, nearestHRP.Position.Z)
                            
                            fix_attemp = true
                        else
                            local behind_dis = nearestHRP.Position + (plrs.LocalPlayer.Character.HumanoidRootPart.Position - nearestHRP.Position).unit * -10
                            plrs.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(behind_dis)
                        end
                    end
                end)
            end
        end
    else
        print("Unknown Commands.")
    end
end

function Commands_x(str, player)
    local wis = string.split(str, " ")
    c_code = tb_2.Text
    local w_code = (c_code ~= "" and c_code) or "/Connect"
    
    if wis[1] == w_code then
        if not alr_c then
            alr_c = true
            alr_dc = false
            check_fm()
            found_master = player.Name
            print(found_master .. " has Connected!")
            c_chat("⚠️ [" .. found_master .. "] has Connected!")
            c_chat("to me.")
            tb_1.Text = tostring(found_master)
            master_x = tb_1.Text
            c_master = plrs:FindFirstChild(master_x)
            if c_master then
                master_call : RBXScriptConnection = c_master.Chatted:Connect(Commands_m)
                ntf("Permission Giving to '" .. c_master.Name .. "'")
            else
                tb_1.Text = ""
                alr_c = false
            end
        end
    elseif table.find(d_tble, wis[1]) then
        if alr_c and not alr_dc then
            alr_c = false
            alr_dc = true
            ntf("Removing Permission from: '" .. c_master.Name .. "'")
            c_chat("⚠️ [" .. c_master.Name .. "] has Disconnected!")
            c_chat("to me.")
            master_call:Disconnect()
            c_master = nil
            tb_1.Text = ""
            found_master = ""
        end
    else
        if not check_delay then
            check_delay = true
            check()
            task.wait()
            check_delay = false
        end
    end
end

rs.RenderStepped:Connect(function()
    for _, player in ipairs(plrs:GetPlayers()) do
        player.Chatted:Connect(function(message)
            Commands_x(message, player)
        end)
    end
end)

tb_1.FocusLost:Connect(function(enterPressed)
    if enterPressed then
        tb_1.Text = ""
        alr_c = false
        ntf("Disconnecting to current master '" .. found_master .. "'")
    end
end)

if c_master then
    c_master.CharacterAdded:Connect(function()
        wait(2)
        c_master.Chatted:Connect(Commands_m)
        ntf("Re-Connect Chat Commands!")
    end)
end

uic(fr, UDim.new(0.2, 0))
uic(tb_1, UDim.new(0.2, 0))
uic(tb_2, UDim.new(0.2, 0))
uic(status_1, UDim.new(0.2, 0))

ntf("Loaded Control Script!")
